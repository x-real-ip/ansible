---
- name: "Confirmation Step"
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Prompt
      ansible.builtin.pause:
        prompt: |
          *********************************************************
          You are about to perform a critical operation.

          During the execution of this playbook, Kubernetes containers with the label storage=truenas will be deleted and reapplied.

          Press Enter to proceed, or Ctrl+C and then 'A' to abort.
          *********************************************************

# - name: Play to remove Kubernetes resources that use TrueNAS storage
#   hosts: k3s_master
#   become: false
#   tasks:
#     - name: Disable autosync for app-of-apps
#       ansible.builtin.include_role:
#         name: kubernetes
#         tasks_from: argocd-disable-app-sync
#       vars:
#         application_name: "app-of-apps"

#     - name: Delete argocd application with label storage=truenas
#       ansible.builtin.include_role:
#         name: kubernetes
#         tasks_from: argocd-delete-app

- name: Start tasks on TrueNAS before switching master
  hosts: truenas
  gather_facts: true
  become: true
  remote_user: admin
  tasks:
    - name: Set default is_master to false
      ansible.builtin.set_fact:
        is_master: false

    - name: Create systemd service file to add VIP from template
      ansible.builtin.include_role:
        name: truenas
        tasks_from: add-vip

    - name: Check if VIP is present on this host
      ansible.builtin.command: ip addr show
      register: vip_check
      changed_when: false

    - name: Set fact if VIP is present
      ansible.builtin.set_fact:
        is_master: true
      when: vip_address in vip_check.stdout

    - name: Start snapshot and replication tasks
      when: is_master | bool
      block:
        - name: Include task TrueNAS get pool snapshot tasks
          ansible.builtin.include_role:
            name: truenas
            tasks_from: get-pool-snapshot-tasks.yaml

        - name: Include task TrueNAS run pool snapshot tasks
          ansible.builtin.include_role:
            name: truenas
            tasks_from: run-pool-snapshot-tasks.yaml
          vars:
            id: "{{ pool_snapshottask_query.stdout | from_json | map(attribute='id') | list }}"

    # - name: Include task TrueNAS check replication tasks
    #   ansible.builtin.include_role:
    #     name: truenas
    #     tasks_from: check-replication-task-success.yaml
    #   vars:
    #     instance: "{{ active_instance }}"

    # - name: Include task TrueNAS disable cloudsync tasks
    #   ansible.builtin.include_role:
    #     name: truenas
    #     tasks_from: enable-disable-cloudsync-tasks.yaml
    #   vars:
    #     instance: "{{ active_instance }}"
    #     enabled: false

    # - name: Include task TrueNAS disable replication tasks
    #   ansible.builtin.include_role:
    #     name: truenas
    #     tasks_from: enable-disable-replication-tasks.yaml
    #   vars:
    #     instance: "{{ active_instance }}"
    #     enabled: false

    # - name: Include task TrueNAS disable snapshot tasks
    #   ansible.builtin.include_role:
    #     name: truenas
    #     tasks_from: enable-disable-snapshot-tasks.yaml
    #   vars:
    #     instance: "{{ active_instance }}"
    #     enabled: false
# - name: Install VIP systemd service
#   hosts: truenas_hosts
#   become: yes
#   gather_facts: nod
#   roles:
#     - role: vip
#       tasks_from: service
