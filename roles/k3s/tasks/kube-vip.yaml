---
- name: Create namespace | {{ kube_vip.name }}
  kubernetes.core.k8s:
    kind: Namespace
    api_version: v1
    name: "{{ kube_vip.namespace }}"
    state: present
  run_once: true

- name: Read template file and apply to the k3s cluster | {{ kube_vip.name }}
  kubernetes.core.k8s:
    state: present
    template: "{{ kube_vip.name }}.yaml.j2"
  run_once: true

- name: Wait until all pods are running | {{ kube_vip.name }}
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: "{{ kube_vip.namespace }}"
    label_selectors:
      - "name = {{ kube_vip.name }}-ds"
  register: pod_list
  until: pod_list | json_query('resources[*].status.phase') | unique == ["Running"]
  retries: 15
  delay: 3
  run_once: true

- name: Configure cluster IP in the kube config file to {{ endpoint_url }}
  ansible.builtin.command: >-
    k3s kubectl config set-cluster default
      --server={{ endpoint_url }}
      --kubeconfig {{ ansible_user_dir }}/.kube/config
  vars:
    endpoint_url: >-
      https://{{ kube_vip.apiserver_endpoint }}:6443

- name: Copy kube config file to the home directory of this local device
  ansible.builtin.fetch:
    src: "{{ ansible_user_dir }}/.kube/config"
    dest: "/home/coen/.kube/"
    flat: true
    fail_on_missing: true
  run_once: true

- name: Render template to localhost | {{ kube_vip.name }}
  ansible.builtin.include_tasks: render-template.yaml
  vars:
    template_file: "{{ kube_vip.name }}.yaml.j2"
