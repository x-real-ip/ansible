---
- name: Verify that all nodes actually joined
  ansible.builtin.command:
    cmd: kubectl get nodes -l "node-role.kubernetes.io/master=true" -o=jsonpath="{.items[*].metadata.name}"
  register: nodes
  until: nodes.rc == 0 and (nodes.stdout.split() | length) == (groups['k3s_master'] | length)
  retries: 20
  delay: 10
  changed_when: false
  failed_when: false

- name: Create directory .kube
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.kube"
    state: directory
    owner: "{{ ansible_user_id }}"
    mode: "u=rwx,g=rx,o="

- name: Copy kube config file to user home directory
  ansible.builtin.copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: "{{ ansible_user_dir }}/.kube/config"
    remote_src: true
    owner: "{{ ansible_user_id }}"
    mode: "u=rw,g=,o="

- name: Create Kubernetes namespaces
  kubernetes.core.k8s:
    name: "{{ item }}"
    api_version: v1
    kind: Namespace
    state: present
  loop: "{{ kubernetes_namespaces }}"
  run_once: true

- name: Deploy and validate kube-vip
  ansible.builtin.include_tasks: "primary-resources/kube-vip.yaml"
  when: apiserver_endpoint and flannel_iface and kube_vip_tag_version is defined

# - name: Deploy Metallb
#   ansible.builtin.include_tasks: metallb.yaml
#   when: metallb_int_lan_ip and metallb_ext_lan_ip is defined

- name: Deploy and validate resources to the k3s cluster and remove temp files
  block:
    - name: Deploy and validate resources to the k3s cluster
      ansible.builtin.include_tasks: "primary-resources/{{ item.name }}.yaml"
      loop_control:
        label: "{{ item.name }}"
      with_items:
        - name: "bitnami-sealed-secrets"
          source: "github"
          namespace: "kube-system"
        - name: "democratic-csi-manual"
          source: "github"
          namespace: "democratic-csi"
        - name: "tls-wildcard-k8s-lan"
          source: "github"
        - name: "tls-wildcard-theautomation-nl"
          source: "github"
        - name: "nginx-ingress-prd-int"
          source: "github"
          namespace: "prd-int"
        - name: "nginx-ingress-prd-ext"
          source: "github"
          namespace: "prd-ext"
        - name: "harbor-secrets-registry-creds"
          source: "github"
        - name: "harbor"
          source: "github"
          namespace: "devops"
        - name: "drone-pipeline-secrets"
          source: "github"
          namespace: "devops"
        - name: "drone"
          source: "github"
          namespace: "devops"
        - name: "feature-discovery"
          source: "github"
          namespace: "devops"
      run_once: true
  always:
    - name: Delete temp content & directory
      file:
        state: absent
        path: "{{ temp_dir }}/"


- name: Get contents of manifests folder
  ansible.builtin.find:
    paths: /var/lib/rancher/k3s/server/manifests
    file_type: file
  register: k3s_server_manifests

- name: Get sub dirs of manifests folder
  ansible.builtin.find:
    paths: /var/lib/rancher/k3s/server/manifests
    file_type: directory
  register: k3s_server_manifests_directories

- name: Remove manifests and folders that are only needed for bootstrapping cluster so k3s doesn't auto apply on start
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  with_items:
    - "{{ k3s_server_manifests.files }}"
    - "{{ k3s_server_manifests_directories.files }}"
  loop_control:
    label: "{{ item.path }}"
