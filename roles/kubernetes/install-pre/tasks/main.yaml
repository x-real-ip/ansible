---
- name: Stop and disable service firewalld
  ansible.builtin.service:
    name: firewalld
    state: stopped
    enabled: false

- name: Install the latest version of packages
  ansible.builtin.dnf:
    name:
      - nano
      - curl
      - wget
      - unzip
      - qemu-guest-agent
      - nfs-utils
      - iscsi-initiator-utils
      - device-mapper-multipath
      - pip
      - jq
      - yum-utils
    state: latest

- name: >-
    Install kubernetes python packages for Ansible kubernetes.core.k8s module
  ansible.builtin.pip:
    name:
      - kubernetes
      - kubernetes-validate

- name: Set SELinux to disabled state
  ansible.posix.selinux:
    state: disabled
  register: selinux
  notify: Reboot
  when: ansible_os_family == "RedHat"

- name: Enable IPv4 forwarding
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: true

- name: Enable IPv6 forwarding
  ansible.posix.sysctl:
    name: net.ipv6.conf.all.forwarding
    value: "1"
    state: present
    reload: true

- name: Enable IPv6 router advertisements
  ansible.posix.sysctl:
    name: net.ipv6.conf.all.accept_ra
    value: "2"
    state: present
    reload: true

- name: Add br_netfilter to /etc/modules-load.d/
  ansible.builtin.copy:
    content: "br_netfilter"
    dest: /etc/modules-load.d/br_netfilter.conf
    mode: "u=rw,g=,o="
  when: ansible_os_family == "RedHat"

- name: Load br_netfilter
  community.general.modprobe:
    name: br_netfilter
    state: present
  when: ansible_os_family == "RedHat"

- name: Set bridge-nf-call-iptables (just to be sure)
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "1"
    state: present
    reload: true
  when: ansible_os_family == "RedHat"
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables

- name: Add /usr/local/bin to sudo secure_path
  ansible.builtin.lineinfile:
    line: "Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin"
    regexp: "Defaults(\\s)*secure_path(\\s)*="
    state: present
    insertafter: EOF
    path: /etc/sudoers
    validate: "visudo -cf %s"
  when: ansible_os_family == "RedHat"

- name: Disable SWAP
  ansible.builtin.command: |
    swapoff -a
  register: output
  changed_when: output.rc != 0

- name: Disable SWAP in fstab
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+.*)$'
    replace: '# \1'

- name: Enable qemu-guest-agent
  ansible.builtin.systemd:
    name: qemu-guest-agent.service
    state: started
    enabled: true

- name: Enable iscsid
  ansible.builtin.systemd:
    name: iscsid.service
    state: started
    enabled: true

- name: Enable multipathd
  ansible.builtin.systemd:
    name: multipathd.service
    state: started
    enabled: true

- name: Creating a multipath.conf file
  ansible.builtin.copy:
    mode: 0644
    dest: "/etc/multipath.conf"
    content: |
      blacklist {
          devnode "sda"
      }
      defaults {
          user_friendly_names yes
          find_multipaths yes
      }

- name: Create directory k3s
  ansible.builtin.file:
    path: "/etc/rancher/k3s/config.yaml.d/"
    state: directory
    owner: "{{ ansible_user_id }}"
    mode: 0755

- name: Copy registries.yaml file
  ansible.builtin.template:
    src: "registries.yaml.j2"
    dest: "/etc/rancher/k3s/registries.yaml"
    owner: root
    group: root
    mode: 0644

- name: Copy main config file to all k3s nodes
  ansible.builtin.template:
    src: "k3s-config-main.yaml.j2"
    dest: "/etc/rancher/k3s/config.yaml.d/main-config.yaml"
    owner: root
    group: root
    mode: 0644
    force: false

- name: Copy init config file to the first k3s master
  ansible.builtin.copy:
    src: "k3s-config-init.yaml"
    dest: "/etc/rancher/k3s/config.yaml.d/init-config.yaml"
    owner: root
    group: root
    mode: 0644
  when: ansible_hostname == hostvars[groups['k3s_master'][0]]['ansible_hostname']

- name: Copy join config file to all k3 nodes except the first
  ansible.builtin.template:
    src: "k3s-config-join.yaml.j2"
    dest: "/etc/rancher/k3s/config.yaml.d/join-config.yaml"
    owner: root
    group: root
    mode: 0644
    force: false
  when: ansible_hostname != hostvars[groups['k3s_master'][0]]['ansible_hostname']
