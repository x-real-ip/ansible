---
- name: Create directory k3s
  ansible.builtin.file:
    path: "/etc/rancher/k3s/config.yaml.d/"
    state: directory
    owner: "{{ ansible_user_id }}"
    mode: 0755

- name: Copy registries.yaml file
  ansible.builtin.template:
    src: "registries.yaml.j2"
    dest: "/etc/rancher/k3s/registries.yaml"
    owner: root
    group: root
    mode: 0644

- name: Copy main config file to all k3s nodes
  ansible.builtin.template:
    src: "k3s-config-main.yaml.j2"
    dest: "/etc/rancher/k3s/config.yaml.d/main-config.yaml"
    owner: root
    group: root
    mode: 0644
    force: false

- name: Copy init config file only to first k3s master
  ansible.builtin.copy:
    src: "k3s-config-init.yaml"
    dest: "/etc/rancher/k3s/config.yaml.d/init-config.yaml"
    owner: root
    group: root
    mode: 0644
  when: ansible_hostname == hostvars[groups['k3s_master'][0]]['ansible_hostname']

- name: Copy join config file to all k3 master nodes except the first
  ansible.builtin.template:
    src: "k3s-config-join.yaml.j2"
    dest: "/etc/rancher/k3s/config.yaml.d/join-config.yaml"
    owner: root
    group: root
    mode: 0644
    force: false
  when: ansible_hostname | regex_search("^k3s-mas(.*)$") and ansible_hostname != hostvars[groups['k3s_master'][0]]['ansible_hostname']

- name: Download k3s install script
  ansible.builtin.get_url:
    url: https://get.k3s.io
    dest: "/etc/rancher/k3s/k3s_install.sh"
    mode: 0775

- name: Run k3s install script on first master node
  ansible.builtin.command: "sh /etc/rancher/k3s/k3s_install.sh"
  register: output
  changed_when: output.rc != 0
  when: ansible_hostname == hostvars[groups['k3s_master'][0]]['ansible_hostname']

- name: Wait for first master node to be ready so other nodes can join
  ansible.builtin.command: "kubectl get nodes"
  register: nodes
  until:
    - '" Ready "  in nodes.stdout'
  retries: 10
  delay: 10
  when: ansible_hostname == hostvars[groups['k3s_master'][0]]['ansible_hostname']

- name: Run k3s install script on the other nodes one by one
  ansible.builtin.command: "sh /etc/rancher/k3s/k3s_install.sh"
  register: output
  throttle: 1
  changed_when: output.rc != 0
  when: ansible_hostname != hostvars[groups['k3s_master'][0]]['ansible_hostname']

- name: Verify that all nodes actually joined
  ansible.builtin.command:
    cmd: k3s kubectl get nodes -l "node-role.kubernetes.io/master=true" -o=jsonpath="{.items[*].metadata.name}"
  register: nodes
  until: nodes.rc == 0 and (nodes.stdout.split() | length) == (groups['k3s_master'] | length)
  retries: "{{ retry_count | default(20) }}"
  delay: 10
  changed_when: false
  failed_when: false
