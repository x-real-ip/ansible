---
- name: Get sys config from {{ hostvars[item]['device_name'] }}
  ansible.builtin.uri:
    url: http://{{ item }}/rpc/Sys.GetConfig
    body_format: json
    return_content: true
  register: sysconfig_content
  ignore_errors: true

- name: Set sys config for {{ hostvars[item]['device_name'] }}
  ansible.builtin.uri:
    body_format: json
    method: POST
    url: http://{{ item }}/rpc
    body: |
      {
        "id": 1,
        "method": "Sys.SetConfig",
        "params": {
          "config": {
            "device": {
              "name": "{{ hostvars[item]['device_name'] }}",
              "eco_mode": {{ settings.eco_mode_enabled }}
            },
            "sntp": {
              "server": "{{ settings.sntp.server }}"
            }
          }
        }
      }
  changed_when: sysconfig_content.json.device.name != hostvars[item]['device_name']
  ignore_errors: true

- name: Get wifi config from {{ hostvars[item]['device_name'] }}
  ansible.builtin.uri:
    url: http://{{ item }}/rpc/Wifi.GetConfig
    body_format: json
    return_content: true
  register: wificonfig_content
  ignore_errors: true

- name: Set wifi config for {{ hostvars[item]['device_name'] }}
  ansible.builtin.uri:
    body_format: json
    method: POST
    url: http://{{ item }}/rpc
    body: |
      {
        "id": 1,
        "method": "WiFi.SetConfig",
        "params": {
          "config": {
            "ap": {
              "enable": {{ settings.ap.enable }}
            },
            "roam": {
              "rssi_thr": {{ settings.ap_roaming.enable | ternary(settings.ap_roaming.rssi_threshold | int, -80) }}
            }
          }
        }
      }
  changed_when: wificonfig_content.json.ap.enable != settings.ap.enable
  ignore_errors: true

- name: Get switch config from {{ hostvars[item]['device_name'] }}
  ansible.builtin.uri:
    url: http://{{ item }}/rpc/Switch.GetConfig?id=0
    body_format: json
    return_content: true
  register: switchconfig_content
  ignore_errors: true

- name: Set switch config for {{ hostvars[item]['device_name'] }}
  ansible.builtin.uri:
    body_format: json
    method: POST
    url: http://{{ item }}/rpc
    body: |
      {
        "id": 0,
        "method": "Switch.GetConfig",
        "params": {
          "config": {
            "voltage_limit": {{ settings.voltage_limit }}
          }
        }
      }
  changed_when: switchconfig_content.json.voltage_limit != settings.voltage_limit
  ignore_errors: true

# - name: Enable/disable relays default state {{ device_name.json.name }}
#   ansible.builtin.uri:
#     url: http://{{ item }}/settings/relay/0?default_state={{ settings.default_state }}
#   changed_when: settings_content.json.relays[0].default_state != settings.default_state
#   when: "'SHPLG' in settings_content.json.device.type or 'SHSW' in settings_content.json.device.type"
#   ignore_errors: true

# - name: Enable/disable lights default state {{ device_name.json.name }}
#   ansible.builtin.uri:
#     url: http://{{ item }}/settings/light/0?default_state={{ settings.default_state }}
#   changed_when: settings_content.json.lights[0].default_state != settings.default_state
#   when: "'lights' in settings_content.json"
#   ignore_errors: true

